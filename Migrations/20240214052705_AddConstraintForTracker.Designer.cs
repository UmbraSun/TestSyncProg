// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestSyncProg.DbContexts;

#nullable disable

namespace TestSyncProg.Migrations
{
    [DbContext(typeof(MSSqlDbContext))]
    [Migration("20240214052705_AddConstraintForTracker")]
    partial class AddConstraintForTracker
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestSyncProg.Entity.EntityTrackerConstraint", b =>
                {
                    b.Property<long>("LocalId")
                        .HasColumnType("bigint");

                    b.Property<string>("UniqueUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("TrackerId")
                        .HasColumnType("bigint");

                    b.HasKey("LocalId", "UniqueUserId");

                    b.HasIndex("TrackerId")
                        .IsUnique();

                    b.ToTable("TrackerConstraints");
                });

            modelBuilder.Entity("TestSyncProg.Entity.EntityTrackerMSSql", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CommandType")
                        .HasColumnType("int");

                    b.Property<string>("ModelJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityTracker");
                });

            modelBuilder.Entity("TestSyncProg.Entity.MaterialMSSql", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("TestSyncProg.Entity.EntityTrackerConstraint", b =>
                {
                    b.HasOne("TestSyncProg.Entity.EntityTrackerMSSql", "Tracker")
                        .WithOne("Constraint")
                        .HasForeignKey("TestSyncProg.Entity.EntityTrackerConstraint", "TrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tracker");
                });

            modelBuilder.Entity("TestSyncProg.Entity.EntityTrackerMSSql", b =>
                {
                    b.Navigation("Constraint")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
